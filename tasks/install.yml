---
# File: install.yml - package installation tasks for Nomad  # noqa 106

- name: Gather the OS packages
  ansible.builtin.package_facts:
    manager: auto
  tags: installation

- name: Initialize a fact with the OS packages to install
  ansible.builtin.set_fact:
    nomad_os_packages_fact: []
  tags: installation

- name: Set a fact with the OS packages to really install
  ansible.builtin.set_fact:
    nomad_os_packages_fact: "{{ nomad_os_packages_fact + [item] }}"
  with_items: "{{ nomad_os_packages }}"
  tags: installation
  when:
    - item.handle is not defined or item.handle != 'skip'
    - item.conflicts is not defined or item.conflicts not in ansible_facts.packages

- name: Install OS packages
  ansible.builtin.package:
    name: "{{ item.name }}"
    state: present
  with_items: "{{ nomad_os_packages_fact }}"
  tags: installation
  when: not ansible_facts['os_family'] == "VMware Photon OS"

- name: Install OS packages # noqa no-changed-when
  ansible.builtin.command: tdnf install {{ item.name }}
  with_items: "{{ nomad_os_packages_fact }}"
  tags: installation
  when: ansible_facts['os_family'] == "VMware Photon OS"

- name: Check Nomad package checksum file
  ansible.builtin.stat:
    path: "{{ role_path }}/files/nomad_{{ nomad_version }}_SHA256SUMS"
  become: false
  run_once: true
  tags: installation
  register: nomad_checksum
  delegate_to: 127.0.0.1

- name: Get Nomad package checksum file
  ansible.builtin.get_url:
    url: "{{ nomad_checksum_file_url }}"
    dest: "{{ role_path }}/files/nomad_{{ nomad_version }}_SHA256SUMS"
    mode: "0644"
  become: false
  run_once: true
  tags: installation
  when: not nomad_checksum.stat.exists
  delegate_to: 127.0.0.1

- name: Get Nomad package checksum # noqa no-changed-when
  ansible.builtin.shell: |
    set -o pipefail
    grep "{{ nomad_pkg }}" "{{ role_path }}/files/nomad_{{ nomad_version }}_SHA256SUMS" | awk '{print $1}'
  args:
    executable: /bin/bash
  become: false
  register: nomad_sha256
  tags: installation
  delegate_to: 127.0.0.1

- name: Check Nomad package file
  ansible.builtin.stat:
    path: "{{ role_path }}/files/{{ nomad_pkg }}"
  become: false
  register: nomad_package
  delegate_to: 127.0.0.1

- name: Download Nomad
  ansible.builtin.get_url:
    url: "{{ nomad_zip_url }}"
    dest: "{{ role_path }}/files/{{ nomad_pkg }}"
    checksum: sha256:{{ nomad_sha256.stdout }}
    timeout: "42"
    mode: "0644"
  become: false
  tags: installation
  delegate_to: 127.0.0.1
  when: not nomad_package.stat.exists

- name: Create Temporary Directory for Extraction
  ansible.builtin.tempfile:
    state: directory
    prefix: ansible-nomad.
  become: false
  register: install_temp
  tags: installation
  delegate_to: 127.0.0.1

- name: Unarchive Nomad
  ansible.builtin.unarchive:
    src: "{{ role_path }}/files/{{ nomad_pkg }}"
    dest: "{{ install_temp.path }}/"
    creates: "{{ install_temp.path }}/nomad"
  become: false
  tags: installation
  delegate_to: 127.0.0.1

- name: Install Nomad
  ansible.builtin.copy:
    src: "{{ install_temp.path }}/nomad"
    dest: "{{ nomad_bin_dir }}"
    owner: "{{ nomad_user }}"
    group: "{{ nomad_group }}"
    mode: "0755"
  tags: installation

- name: Cleanup
  ansible.builtin.file:
    path: "{{ install_temp.path }}"
    state: absent
  become: false
  tags: installation
  delegate_to: 127.0.0.1
