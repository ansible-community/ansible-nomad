#!/bin/bash
#
# chkconfig:   2345 95 95
# description: distributed, highly available, datacenter-aware scheduler
# processname: nomad
# pidansible.builtin.file: {{ nomad_run_dir }}/pidfile
# shellcheck disable=SC2015
# shellcheck disable=SC1091

. /etc/init.d/functions

nomad="{{nomad_bin_dir}}/nomad"
CONFIG_PATH="{{ nomad_config_dir }}"
PID_FILE="{{ nomad_run_dir }}/nomad.pid"

[ -e /etc/sysconfig/nomad ] && . /etc/sysconfig/nomad


GOMAXPROCS=$(nproc)
export GOMAXPROCS

mkrundir() {
  [ ! -d "{{ nomad_run_dir }}" ] && mkdir -p "{{ nomad_run_dir }}"
      chown "{{ nomad_user }}" "{{ nomad_run_dir }}"
}

KILLPROC_OPT="-p ${PID_FILE}"
mkpidfile() {
  mkrundir
    [ ! -f "$PID_FILE" ] && pidofproc "$nomad" > "$PID_FILE"
      if ! chown "{{ nomad_user }}" "{{ nomad_run_dir }}"; then
        rm "$PID_FILE"
        KILLPROC_OPT=""
      fi
}

start() {
  echo -n "Starting nomad: "
  mkrundir
  [ -f "$PID_FILE" ] && rm "$PID_FILE"
  daemon --user="{{ nomad_user }}" \
      --pidfile="$PID_FILE" \
      "$nomad" agent -config "${CONFIG_PATH}" \&
  retcode=$?
  touch "{{ nomad_lockfile }}"
  return $retcode
}

stop() {
  echo -n "Shutting down nomad: "
  if ("${nomad}" agent-info -address=http://{{ nomad_advertise_address }}:{{ nomad_ports.http }} 2>/dev/null | grep -q 'server = false' 2>/dev/null) ; then
      "$nomad" leave
  fi

  mkpidfile
  killproc $KILLPROC_OPT $nomad -SIGTERM

  retcode=$?
  rm -f "{{ nomad_lockfile }}" "$PID_FILE"
  return $retcode
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        "$nomad" status -address=http://{{ nomad_advertise_address }}:{{ nomad_ports.http }} 
        ;;
    restart)
        stop
        sleep 3
        start
        ;;
    reload)
        mkpidfile
        killproc $KILLPROC_OPT $nomad -HUP
        ;;
    condrestart)
        [ -f "{{ nomad_lockfile }}" ] && restart || :
        ;;
    *)
        echo "Usage: nomad {start|stop|status|reload|restart}"
        exit 1
        ;;
esac
exit $?
